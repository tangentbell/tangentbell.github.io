name: Build & Deploy (dist-only + selected root)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  # Map sub-app folders to site paths (left: app dir, right: URL path)
  # Example includes a single Vite app living at /reader/
  DIST_MAP: |
    reader:reader

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      # --- Build each sub-app listed in DIST_MAP ---
      - name: Install & Build sub-apps
        run: |
          set -euo pipefail
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            APP_DIR="${line%%:*}"
            TARGET_PATH="${line##*:}"
            echo "::group::Build $APP_DIR -> $TARGET_PATH"
            cd "$APP_DIR"
            npm ci
            npm run build
            cd - > /dev/null
            echo "::endgroup::"
          done <<< "${DIST_MAP}"

      # --- Stage the deployment folder (out/) ---
      - name: Prepare out/ (dist + selected root folders)
        run: |
          set -euo pipefail
          rm -rf out
          mkdir -p out

          # Copy each dist/ to its target path
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            APP_DIR="${line%%:*}"
            TARGET_PATH="${line##*:}"
            mkdir -p "out/${TARGET_PATH}"
            rsync -a "${APP_DIR}/dist/" "out/${TARGET_PATH}/"
          done <<< "${DIST_MAP}"

          # --- Include your chosen root files/folders (nothing else) ---
          # The *** pattern ensures rsync recurses properly for dirs.
          rsync -a \
            --include="index.html" \
            --include="favicon.*" \
            --include="img/***" \
            --include="css/***" \
            --include="ts/***" \
            --include="music/***" \
            --include="art/***" \
            --include="blogs/***" \
            --include="about/***" \
            --exclude="*" \
            ./ out/

          # If you use a custom domain, include CNAME (uncomment if present):
          if [ -f CNAME ]; then cp CNAME out/CNAME; fi

          # SPA fallback for each sub-app path (optional but handy)
          for d in out/*; do
            if [ -d "$d" ] && [ -f "$d/index.html" ]; then
              cp "$d/index.html" "$d/404.html"
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
